# _*_coding:utf-8 _*_
# @Time    : 2022/4/24 21:38
# @Author  : Guo 
# @File    : 868. 二进制间距.py
# @Desc    :

"""
给定一个正整数 n，找到并返回 n 的二进制表示中两个 相邻 1 之间的 最长距离 。如果不存在两个相邻的 1，返回 0 。
如果只有 0 将两个 1 分隔开（可能不存在 0 ），则认为这两个 1 彼此 相邻 。
两个 1 之间的距离是它们的二进制表示中位置的绝对差。例如，"1001" 中的两个 1 的距离为 3 。


示例 1：
输入：n = 22
输出：2
解释：22 的二进制是 "10110" 。
在 22 的二进制表示中，有三个 1，组成两对相邻的 1 。
第一对相邻的 1 中，两个 1 之间的距离为 2 。
第二对相邻的 1 中，两个 1 之间的距离为 1 。
答案取两个距离之中最大的，也就是 2 。
"""


class Solution:
    def binaryGap(self, n: int) -> int:
        n = bin(n)[2:]  # 转换为二进制
        print(n)
        ans = 0
        last_1 = 0  # 记录上一次是1的位置
        n_len = len(n)
        for i in range(n_len):
            if n[i] == '1':
                ans = max(i - last_1, ans)
                last_1 = i

        return ans

